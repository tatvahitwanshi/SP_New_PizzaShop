@model DataAccessLayer.ViewModels.MenuViewModel
<div class="container-fluid p-3 " style="height: 700px;">
    <div class="row">
        <div class="col-2 ">
            <div class="row d-none d-xl-flex flex-column">
                <div class="">
                    <span class="h4 fw-bold " style="color: #0066A7;">Category
                        <!-- Button to open the modal -->
                        @if (ViewBag.Permissions[PermissionConst.CanAddEdit])
                        {
                            <button type="button" onclick="openAddCategoryModal()"
                                style="text-decoration: none; border: none; background-color: white;">
                                <i class="bi bi-plus-square ms-2 h5"></i>
                            </button>
                        }
                    </span>
                </div>
                <div class="category overflow-auto mt-3">
                    @foreach (var category in Model.Categories)
                    {
                        <a class="justify-content-start align-items-center category-inner-box mt-2 text-reset  @(category.CategoryId == Model.Items.ParentId ? "selected" : "")"
                            style="text-decoration: none;" href="javascript:void(0);"
                            onclick="LoadPartialView(@category.CategoryId); setActiveCategory(this);">

                            <div class="mb-3 name-sidebar-category ms-1 " id="category-container">
                                <img src="~/images/logos/sixdot.png" alt="" style="width:20px; height: 15px;" class="">
                                @category.Categoryname
                                @if (ViewBag.Permissions[PermissionConst.CanAddEdit])
                                {
                                    <a class="editButtom" href="javascript:void(0);" style="text-decoration: none; color: grey;"
                                        id="editCategory" onclick="openEditModal(@category.CategoryId)">
                                        <i class="bi bi-pen float-end"></i>
                                    </a>
                                }
                                @if (ViewBag.Permissions[PermissionConst.CanDelete])
                                {
                                    <a class="deleteButton" href="javascript:void(0);"
                                        style="text-decoration: none; color: grey;"
                                        onclick="openDeleteModal(@category.CategoryId)">
                                        <i class="bi bi-trash float-end"></i>
                                    </a>
                                }
                            </div>
                        </a>
                    }
                </div>
            </div>

            @* offcanvas for the category *@
            <div class="offcanvas offcanvas-start d-xl-none" tabindex="-1" id="offcanvasExample1"
                aria-labelledby="offcanvasExampleLabel" style="width: auto;" data-bs-scroll="true"
                data-bs-backdrop="false">
                <div class="offcanvas-header mt-2">
                    <span class="h3 fw-bold align-self-center" style="color: #0066A7;">Category</span>
                    @if (ViewBag.Permissions[PermissionConst.CanAddEdit])
                    {
                        <button type="button" onclick="openAddCategoryModal()"
                            style="text-decoration: none; border: none; background-color: white;">
                            <i class="bi bi-plus-square ms-2 h5"></i>
                        </button>
                    }
                    <button type="button" class="btn-close text-reset " data-bs-dismiss="offcanvas" aria-label="Close"
                        style="margin-bottom: inherit; width: 2px; height: 2px;"></button>
                </div>
                <div class=" category overflow-auto mt-2 h-100 p-2 ms-2">

                    @foreach (var category in Model.Categories)
                    {
                        <a class="justify-content-start align-items-center category-inner-box mt-2 text-reset  @(category.CategoryId == Model.Items.ParentId ? "selected" : "")"
                            style="text-decoration: none;" href="javascript:void(0);"
                            onclick="LoadPartialView(@category.CategoryId); setActiveCategory(this);">

                            <div class="mb-3 name-sidebar-category ms-1 " id="category-container">
                                <img src="~/images/logos/sixdot.png" alt="" style="width:20px; height: 15px;">
                                @category.Categoryname
                                @if (ViewBag.Permissions[PermissionConst.CanAddEdit])
                                {
                                    <a class="editButtom" href="javascript:void(0);" style="text-decoration: none; color: grey;"
                                        id="editCategory" onclick="openEditModal(@category.CategoryId)">
                                        <i class="bi bi-pen float-end"></i>
                                    </a>
                                }
                                @if (ViewBag.Permissions[PermissionConst.CanDelete])
                                {
                                    <a class="deleteButton" href="javascript:void(0);"
                                        style="text-decoration: none; color: grey;"
                                        onclick="openDeleteModal(@category.CategoryId)">
                                        <i class="bi bi-trash float-end"></i>
                                    </a>
                                }
                            </div>
                        </a>
                    }
                </div>
            </div>

            <!-- Model Add Category -->
            <div class="modal fade " id="staticBackdrop1" data-bs-backdrop="static" data-bs-keyboard="false"
                tabindex="-1" aria-labelledby="staticBackdrop1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Category</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form method="post" asp-action="AddCategory" asp-controller="Menu">
                                <input type="hidden" id="Categoryid" name="Categoryid"> <!-- Hidden ID Field -->

                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control" id="Categoryname" name="Categoryname"
                                        placeholder="Category Name">
                                    <label for="Categoryname">Name</label>
                                    <span class="text-danger validation-message" id="CategorynameValidation"></span>
                                </div>

                                <div class="form-floating">
                                    <textarea class="form-control" name="Categorydescription" id="Categorydescription"
                                        placeholder="Enter Description"></textarea>
                                    <label for="Categorydescription">Description</label>
                                    <span class="text-danger validation-message"
                                        id="CategorydescriptionValidation"></span>
                                </div>

                                <div class="col mt-3 mb-3 d-flex justify-content-end">
                                    <button class="btn text-white me-2" style="background-color: #0066A7;" type="submit"
                                        id="saveCategoryBtn">Save</button>
                                    <button class="btn" style="border-color: #0066A7; color: #0066A7;" type="button"
                                        data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Model Edit Category -->
            <div class="modal fade" id="staticBackdrop2" data-bs-backdrop="static" data-bs-keyboard="false"
                tabindex="-1" aria-labelledby="staticBackdropLabel">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5">Edit Category</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form method="post" asp-action="UpdateCategory" asp-controller="Menu">
                                <input type="hidden" id="editCategoryId" asp-for="@Model.AddEditCategory.CategoryId">

                                <!-- Category Name Field with Validation -->
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control" id="editCategoryName"
                                        asp-for="@Model.AddEditCategory.Categoryname" placeholder="Category Name">
                                    <label for="editCategoryName">Name</label>
                                    <span class="text-danger" asp-validation-for="AddEditCategory.Categoryname"></span>
                                </div>

                                <!-- Category Description Field -->
                                <div class="form-floating">
                                    <textarea class="form-control" asp-for="@Model.AddEditCategory.Categorydescription"
                                        id="editCategoryDescription" placeholder="Enter Description"></textarea>
                                    <label for="editCategoryDescription">Description</label>
                                    <span class="text-danger"
                                        asp-validation-for="AddEditCategory.Categorydescription"></span>
                                </div>

                                <div class="col mt-3 mb-3 d-flex justify-content-end">
                                    <button class="btn text-white me-2" style="background-color: #0066A7;" type="submit"
                                        id="editsaveCategoryBtn">Save</button>
                                    <button class="btn" style="border-color: #0066A7; color: #0066A7;" type="button"
                                        data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Model Delete -->
            <div class="modal fade" id="deleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="d-flex justify-content-center">
                                <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt=""
                                    style="width: 10%; height: 10%;">
                            </div>
                            <div class="d-flex justify-content-center mt-3">
                                <span class="text-muted">Are you sure you want to delete this Category?</span>
                            </div>
                            <div class="d-flex justify-content-center mt-3">
                                <button class="btn text-white" style="background-color: #0066A7;" type="button"
                                    id="confirmDeleteBtn">Yes</button>
                                <button class="btn ms-2" style="border-color: #0066A7; color: #0066A7;" type="button"
                                    data-bs-dismiss="modal">No</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-xl-10">
            <div class="row">
                <div class="col">
                    <span class="h4 fw-bold " style="color: #0066A7;" data-bs-toggle="offcanvas"
                        href="#offcanvasExample1" role="button1" aria-controls="offcanvasExample1">Items</span>
                </div>
            </div>
            <div class="row">
                <div class="col-12 d-flex justify-content-end">
                    <div class="d-flex " role="search">
                        <div class="d-flex  me-2 p-1 position-relative">
                            <input class="search_input form-control me-2 border-0" type="text" placeholder="Search"
                                aria-label="Search" id="searchInputItem" value="@Model.Items.SearchKey"
                                oninput="doSearchItem()">
                            <div class="" onclick="doSearchItem()">
                                <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor"
                                    class="bi bi-search position-absolute search-icon-main" viewBox="0 0 16 16"
                                    onclick="">
                                    <path
                                        d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                                </svg>
                            </div>

                        </div>
                        @if (ViewBag.Permissions[PermissionConst.CanDelete])
                        {
                            <div class="btn border" id="massDeleteBtn"><i class="bi bi-trash h4 text-muted"></i></div>
                        }
                        @if (ViewBag.Permissions[PermissionConst.CanAddEdit])
                        {
                            <button class="btn text-white d-none d-md-block ms-2" style="background-color: #0066A7;"
                                type="button" onclick="openAddItemModal()">
                                +New Item
                            </button>

                            <button class="btn text-white d-md-none ms-2" type="button" onclick="openAddItemModal()"
                                style="background-color: #0066A7;">
                                +
                            </button>
                        }
                    </div>
                </div>
            </div>
            <div class="" id="itemsContainer">
                <partial name="_PartialItems.cshtml" , model="Model" />
            </div>
        </div>
    </div>
</div>
@* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> *@
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

<script>
    @* --------------------------------------------------------Delete And Mass Delete Item--------------------------------------------------------- *@
    deleteItemIds =[]; // Store selected item IDs
    function openItemDeleteModal(itemId = null) {
        deleteItemIds = []; // Reset array

        if (itemId) {
            console.log("Single delete");
            deleteItemIds.push(itemId); // Single delete
        } else {
            console.log("Multiple delete");
            $(".inner-check:checked").each(function () {
                deleteItemIds.push($(this).data("id")); // Fix selector
            });
        }
        if (deleteItemIds.length > 0) {
            console.log("Items to delete:", deleteItemIds);
            var modal = new bootstrap.Modal(document.getElementById("itemdeleteModal"));
            modal.show();

        } else {
            toastr.error("Please select at least one item to delete.");
        }
    }
    // Fix mass delete button click event
    $("#massDeleteBtn").on("click", function () {
        openItemDeleteModal();
    });
    // Handle delete confirmation
    $(document).on("click", "#itemconfirmDeleteBtn", function () {
        console.log("Deleting Items:", deleteItemIds);
        $.ajax({
            url: '@Url.Action("DeleteItem", "Menu")',
            type: 'POST',
            data: { itemIds: deleteItemIds },
            success: function (response) {
                deleteItemIds = []; // Reset array
                if (response.success) 
                {
                    var categoryId = $("#parentIditem").val();
                    LoadPartialView(categoryId); // Reload the items
                    var modal = bootstrap.Modal.getInstance(document.getElementById("itemdeleteModal"));
                    modal.hide();
                    toastr.success("Items deleted successfully.");

                } else { }
            },
            error: function (xhr, status, error) {
                deleteItemIds = []; // Reset array
                toastr.error("Error deleting items: " + error);
            }
        });
    });

    @* ----------------------------------------------Load Partial View Items-------------------------------------------------------------- *@
        function LoadPartialView(categoryId) {
            console.log("Category ID:", categoryId);
            var pageSize = $("#pageSizeDropdownItem").val();
            console.log("Page Size:", pageSize);

            // Show loading animation
            @* $("#itemsContainer").html("<p>Loading...</p>"); *@
                $.ajax({
                    url: '@Url.Action("GetItemsByCategory", "Menu")',
                    type: 'GET',
                    data: { categoryId: categoryId, PageSize: pageSize },
                    success: function (data) {
                        $("#searchInputItem").val("");
                        $("#itemsContainer").html(data);
                    },
                    error: function (error) {
                        console.error('Error loading partial view:', error);
                        $("#itemsContainer").html("<p>Error loading items.</p>");
                    }
                });
        }

    @* ------------------------active----------------------------- *@
        function setActiveCategory(element) {
            console.log("Active");
            // Remove the 'selected' class from all <li> elements
            document.querySelectorAll('.category-inner-box').forEach(function (item) {
                item.classList.remove('selected');
            });
            // Add the 'selected' class to the clicked <li> element
            element.classList.add('selected');

        }
    @* ------------------------Category add model------------------------------ *@
        function openAddCategoryModal() {
            var modal = new bootstrap.Modal(document.getElementById("staticBackdrop1"));
            modal.show();
        }

    //Validation
    $(document).ready(function () {
        $("#saveCategoryBtn").click(function (event) {
            let isValid = true;

            // Clear previous validation messages
            $(".validation-message").text("");

            // Validate Category Name
            let categoryName = $("#Categoryname").val().trim();
            if (categoryName === "") {
                $("#CategorynameValidation").text("Category name is required.");
                isValid = false;
            }

            // Validate Category Description
            let categoryDescription = $("#Categorydescription").val().trim();
            if (categoryDescription === "") {
                $("#CategorydescriptionValidation").text("Description is required.");
                isValid = false;
            }

            // Prevent form submission if validation fails
            if (!isValid) {
                event.preventDefault();
            }
        });
    });

    @* $(document).ready(function () {
        $("#editCategoryForm").validate({
            rules: {
                Categoryname: {
                    required: true
                },
                Categorydescription: {
                    required: true
                }
            },
            messages: {
                Categoryname: "Category name is required.",
                Categorydescription: "Description is required."
            },
            errorPlacement: function (error, element) {
                error.appendTo(element.parent().find("label"));
            },
            submitHandler: function (form) {
                form.submit(); // Submit the form only if valid
            }
        });

        $("#editsaveCategoryBtn").click(function () {
            $("#editCategoryForm").submit(); // Trigger validation before submission
        });
    }); *@
</script>